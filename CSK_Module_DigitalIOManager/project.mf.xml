<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<manifest>
    <application name="CSK_Module_DigitalIOManager">
        <crown name="CSK_Module_DigitalIOManager">
            <trait>released</trait>
            <desc>This is an automatically generated CROWN (description not necessary)</desc>
        </crown>
        <crown name="CSK_DigitalIOManager">
            <trait>released</trait>
            <desc>Module to manage DigitalIO configurations and to provide features like signal forwarding (realized in dynamically created cFlow), signal &lt; - &gt; event forwarding and setting output states. +
Other modules can access these features / settings.
For most features it is needed to preconfigure some values and then to activate this setup. +
{empty} +
Typically the features of this module are used like this (check also main script of this module): +
{empty} +
**1) Setup of the ports** +
At first, select the port you want to setup with "selectOutputInterface" or "selectInputInterface" by its ENUM, e.g. with 'CSK_DigitalIOManager.selectOutputInterface( "S1DO1" )'. +
Now, you can setup the port configuration with functions like "setActivationMode" / "setActivationValue" / "setDebounceMode" / "setInputLogic" / "setOutputLogic" / "setOutputMode" / ... +
IMPORTANT: To activate the predefined setup of the port, you need to call "setActiveStatusInput" / "setActiveStatusOutput", e.g. 'CSK_DigitalIOManager.setActiveStatusOutput( true )'. +
{empty} +
**2) Set digital output** +
Via "setOutput", you can set the status of the latest selected output port. (Same like 'Connector.DigitalOut.set( ... )') +
{empty} +
**3) Get digital input** +
Via "getInputState", you can get the status of the latest selected input port. (Same like 'Connector.DigitalIn.get( ... )') +
{empty} +
**4) Trigger digital output by event** +
It is possible to set a digital output signal by notifiying an event. For this, you need to use "setTriggerEvent" to predefine the event to listen to (e.g. 'CSK_DigitalIOManager.setTriggerEvent( "CrownName.OnNewResult" )'). The event needs to provide a bool value as first parameter to define the status to set. +
Additionally, it is necessary to define which port should be set by the function "setOutputToTrigger", e.g. by 'CSK_DigitalIOManager.setOutputToTrigger( "S1DO1" )'. +
This will become active by calling 'CSK_DigitalIOManager.addTriggerEvent()'. +
If the event will raise, the digital output signal will be set by the forwarded bool value of the event. It will use the configuration of the port setup. +
That means for example, if the output port is configured with OutputMode = "PUSH_PULL", Logic = "ACTIVE_HIGH", ActivationMode = "TIME_MS", ActivationValue = "100", and the event is notified with "true", the output port will be active for 100ms. +
(INFO: If configured time is not "0" (keep signal), internally it will call automatically 'Connector.DigitalOut.set( status )' followed by 'Connector.DigitalOut.set( not status )', so it is not necessary to call the event twice to reset the status ...). +
To remove this "Event2Trigger"-pair, you need to select this pair via "selectOutputToSetByEventPair" and then to call "removeTriggerEvent". +
{empty} +
**5) Forward digital input signals via event** +
It is possible to forward the status of the digital input signal to register on this by other modules (check docu of 'CSK_DigitalIOManager.OnNewInputStateENUM'-event). +
For this, you need to select the specific port via "setInputToForward", e.g. 'CSK_DigitalIOManager.setInputToForward( "S2DI1" )'. +
By calling then "addForwardEvent", it will forward new states of this port in the event like 'CSK_DigitalIOManager.OnNewInputStateS2DI1'. +
To remove this "Input2Event"-pair, you need to select this pair via "selectForwardInputToEventPair" and then call "removeForwardEvent". +
{empty} +
**6) Link different ports** +
It is possible to link different ports with each other (like a wire inside of a flow). This will be handled as a cFlow. +
For this, you need to configure the ports you want to link via "setInputForLink" / "setOutputForLink". Additionally, you can set a delay via "setDelayForLink". +
To activate the predefined link, you need to call 'CSK_DigitalIOManager.addLink()'. +
The input signal will be as well forwarded via the 'CSK_DigitalIOManager.OnNewFlowInputStateENUM'-event (e.g. to use in other scripts, see docu of this event). +
To remove this link, you need to select this link via "selectLink" and then to call "removeLink". +</desc>
            <enum name="ActivationMode" trait="released">
                <desc>Digital output activation mode.</desc>
                <item desc="The activation value will be based on time in milliseconds." name="TIME_MS">TIME_MS</item>
                <item desc="The activation value will be based on increments in ticks." name="INCREMENT_TICK">INCREMENT_TICK</item>
            </enum>
            <enum name="DebounceMode" trait="released">
                <desc>Digital input debounce mode.</desc>
                <item desc="The debounce value will be based on time in milliseconds." name="TIME_MS">TIME_MS</item>
                <item desc="The debounce value will be based on increments in ticks." name="INCREMENT_TICK">INCREMENT_TICK</item>
            </enum>
            <enum name="SignalLogic" trait="released">
                <desc>Signal logic of digital input / output signal.</desc>
                <item desc="Active high signal logic is used." name="ACTIVE_HIGH">ACTIVE_HIGH</item>
                <item desc="Active low signal logic is used." name="ACTIVE_LOW">ACTIVE_LOW</item>
            </enum>
            <enum name="PortOutputMode" trait="released">
                <desc>Digital output mode.</desc>
                <item desc="Digital port works as high-side (PNP) output." name="HIGH_SIDE">HIGH_SIDE</item>
                <item desc="Digital port works as low-side (NPN) output." name="LOW_SIDE">LOW_SIDE</item>
                <item desc="Digital port works as push-pull output." name="PUSH_PULL">PUSH_PULL</item>
            </enum>
            <serves>
                <event name="OnNewStatusLoadParameterOnReboot">
                    <desc>Notify status if parameters should be loaded on app / device boot up.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnPersistentDataModuleAvailable">
                    <desc>Notify status if features of CSK_PersistentData module are available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnDataLoadedOnReboot">
                    <desc>Event to call if module tried to load parameters and should be ready.</desc>
                </event>
                <event name="OnNewOutputPortTable">
                    <desc>Notify list of available output interfaces and the according settings (used for the UI table).</desc>
                    <param desc="List (JSON)" multiplicity="1" name="jsonList" type="string"/>
                </event>
                <event name="OnNewInputPortTable">
                    <desc>Notify list of available input interfaces and the according settings (used for the UI table).</desc>
                    <param desc="List (JSON)" multiplicity="1" name="inputList" type="string"/>
                </event>
                <event name="OnNewActiveStatusInput">
                    <desc>Notify activation status of currently selected input port.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewDebounceMode">
                    <desc>Notify debounce mode of currently selected input port.</desc>
                    <param desc="Debounce mode" multiplicity="1" name="mode" type="string"/>
                </event>
                <event name="OnNewDebounceValue">
                    <desc>Notify debounce value of currently selected input port in milliseconds / ticks.</desc>
                    <param desc="Debounce value" multiplicity="1" name="value" type="int"/>
                </event>
                <event name="OnNewInputLogic">
                    <desc>Notify signal logic of currently selected input port.</desc>
                    <param desc="Signal logic" multiplicity="1" name="logic" type="string"/>
                </event>
                <event name="OnNewActiveStatusOutput">
                    <desc>Notify activation status of currently selected output port.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewActivationMode">
                    <desc>Notify activation mode of currently selected output port.</desc>
                    <param desc="Activation mode" multiplicity="1" name="mode" type="string"/>
                </event>
                <event name="OnNewActivationValue">
                    <desc>Notify activation value of currently selected output port in milliseconds / ticks.</desc>
                    <param desc="Activation value" multiplicity="1" name="value" type="int"/>
                </event>
                <event name="OnNewOutputLogic">
                    <desc>Notify signal logic of currently selected output port.</desc>
                    <param desc="Signal logic" multiplicity="1" name="logic" type="string"/>
                </event>
                <event name="OnNewOutputMode">
                    <desc>Notify output mode of currently selected output port.</desc>
                    <param desc="Output mode" multiplicity="1" name="mode" type="string"/>
                </event>
                <event name="OnNewInputSelection">
                    <desc>Notify currently selected input interface.</desc>
                    <param desc="Currently selected input interface." multiplicity="1" name="selection" type="string"/>
                </event>
                <event name="OnNewOutputSelection">
                    <desc>Notify currently selected output interface.</desc>
                    <param desc="Currently selected output interface." multiplicity="1" name="selection" type="string"/>
                </event>
                <event name="OnNewLinkSelected">
                    <desc>Notify selected link in UI table list.</desc>
                    <param desc="Selected link" multiplicity="1" name="selection" type="string"/>
                </event>
                <event name="OnNewInputPortList">
                    <desc>Notify list of available input interfaces.</desc>
                    <param desc="List (JSON)" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewOutputPortList">
                    <desc>Notify list of available output interfaces.</desc>
                    <param desc="List (JSON)" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewInputForLinkSelected">
                    <desc>Notify currently selected input interface to use for new links (see "addLink").</desc>
                    <param desc="Name of selected input interface." multiplicity="1" name="selection" type="string"/>
                </event>
                <event name="OnNewOutputForLinkSelected">
                    <desc>Notify currently selected output interface to use for new links (see "addLink").</desc>
                    <param desc="Name of selected output interface." multiplicity="1" name="selection" type="string"/>
                </event>
                <event name="OnNewLinkList">
                    <desc>Notify list of currently active links (cFlow) (e.g. for UI table).</desc>
                    <param desc="List (JSON)" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewMessageType">
                    <desc>Notify current message type of UI callout.</desc>
                    <param desc="Message type (like 'info', 'warning')" multiplicity="1" name="type" type="string"/>
                </event>
                <event name="OnNewInternalMessage">
                    <desc>Notify internal messages.</desc>
                    <param desc="Message" multiplicity="1" name="message" type="string"/>
                </event>
                <event name="OnShowInternalMessages">
                    <desc>Notify if internal message should be shown.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="string"/>
                </event>
                <event name="OnNewForwardTriggerList">
                    <desc>Notify list of configured input interfaces and their related events to call.</desc>
                    <param desc="List (JSON)" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewSetOutputByEventList">
                    <desc>Notify list of triggerEvents (triggerEvent names + related digital output signals to be set), e.g. for table in UI.</desc>
                    <param desc="List (JSON)" multiplicity="1" name="list" type="string"/>
                </event>
                <event name="OnNewForwardEvent">
                    <desc>Notify current event name to use for forwarding a digital input signal (currently not used, default eventnames are used like 'CSK_DigitalIOManager.OnNewInputState[portName]').</desc>
                    <param desc="Event name" multiplicity="1" name="parametername" type="string"/>
                </event>
                <event name="OnNewTriggerEvent">
                    <desc>Notify current eventname to be set for listening to set related output interface (see "addTriggerEvent").</desc>
                    <param desc="Event name to wait for as trigger" multiplicity="1" name="event" type="string"/>
                </event>
                <event name="OnNewInputToForward">
                    <desc>Notify selected input port to forward "OnChange" status via event.</desc>
                    <param desc="Port of signal to forward" multiplicity="1" name="port" type="string"/>
                </event>
                <event name="OnNewOutputToTrigger">
                    <desc>Notify currently preselected output interface to use (set) for a trigger event (see "addTriggerEvent").</desc>
                    <param desc="Interface" multiplicity="1" name="port" type="string"/>
                </event>
                <event name="OnNewLinkDelay">
                    <desc>Notify delay time of currently selected link in milliseconds.</desc>
                    <param desc="Delay time in [ms]." multiplicity="1" name="delay" type="int"/>
                </event>
                <event name="OnNewInputStateENUM">
                    <desc>Example for dynamically created event to forward an incoming digital input signal if configured (see "addForwardEvent"). +
"ENUM" is replaced by DigitalInPort ENUM (e.g. 'CSK_DigitalIOManager.OnNewInputStateS1DI1'). +
INFO: As this event will be created dynamically, there is no auto completion within SICK AppStudio available for such an event.</desc>
                    <param desc="New state of input signal." multiplicity="1" name="newState" type="bool"/>
                </event>
                <event name="OnNewInputToForwardDataInfo">
                    <desc>Notify data information text of selected input port to forward "OnChange" status via event.</desc>
                    <param desc="DataInfo text" multiplicity="1" name="info" type="string"/>
                </event>
                <event name="OnNewEventList">
                    <desc>Notify lists of configured forward events and related data information texts (see "addForwardEvent").</desc>
                    <param desc="List of configured events" multiplicity="*" name="events" type="string"/>
                    <param desc="List of configured dataInfo texts." multiplicity="*" name="infoTexts" type="string"/>
                </event>
                <event name="OnNewStatusModuleIsActive">
                    <desc>Notify if module can be used on device.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelOperatorActive">
                    <desc>Status of Operator userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelMaintenanceActive">
                    <desc>Status of Maintenance userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelServiceActive">
                    <desc>Status of Service userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnUserLevelAdminActive">
                    <desc>Status of Admin userlevel. Used internally in combination with the CSK_UserManagement module if available.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewParameterName">
                    <desc>Notify name of persistent data parameter.</desc>
                    <param desc="Parameter name" multiplicity="1" name="name" type="string"/>
                </event>
                <event name="OnNewFlowInputStateENUM">
                    <desc>Example for dynamically created event to forward an incoming digital input signal if used within a link (see "addLink"). +
"ENUM" is replaced by DigitalInPort ENUM (e.g. 'CSK_DigitalIOManager.OnNewFlowInputStateS1DI1'). +
This event will be created during runtime if a signal link is used. So for users of this event, it is necessary to check first if this event is already available to be able to register to it. +
INFO: As this event will be created dynamically, there is no auto completion within SICK AppStudio available for such an event.</desc>
                </event>
                <event name="OnNewStatusTrackInputSignalStatus">
                    <desc>Notify if status of digital input signals should be tracked for UI.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusFlowConfigPriority">
                    <desc>Notify if FlowConfig should have priority for FlowConfig relevant configurations.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </event>
                <event name="OnNewStatusCSKStyle">
                    <desc>Notify UI style to use for CSK modules.</desc>
                    <param desc="UI style" multiplicity="1" name="theme" type="string"/>
                </event>
                <event name="OnNewStatusModuleVersion">
                    <desc>Notify version of module.</desc>
                    <param desc="Version" multiplicity="1" name="version" type="string"/>
                </event>
                <function name="setParameterName">
                    <desc>Function to set the name of the parameters if saved/loaded via the CSK_PersistentData module.</desc>
                    <param desc="Name of the parameter." multiplicity="1" name="name" type="string"/>
                </function>
                <function name="sendParameters">
                    <desc>Send parameters to CSK_PersistentData module if possible to save them.</desc>
                    <param desc="[Optional] Set to TRUE if the data should NOT be saved immediately after sending." multiplicity="?" name="noDataSave" type="bool"/>
                </function>
                <function name="setLoadOnReboot">
                    <desc>Configure if this module should load its saved parameters at app / device boot up</desc>
                    <param desc="Status to set." multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="pageCalled">
                    <desc>Function to register "OnResume" of the module UI (only as helper function).</desc>
                    <return desc="Empty string (only needed to simplify binding)." multiplicity="1" name="empty" type="string"/>
                </function>
                <function name="selectOutputInterface">
                    <desc>Select output interface to configure settings (e.g. in UI table).</desc>
                    <param desc="Output interface to select" multiplicity="1" name="selection" type="string"/>
                </function>
                <function name="selectInputInterface">
                    <desc>Select input interface to configure settings (e.g. in UI table).</desc>
                    <param desc="Input interface to select" multiplicity="1" name="selection" type="string"/>
                </function>
                <function name="setActiveStatusInput">
                    <desc>Set if selected input interface should be active.</desc>
                    <param desc="Input active status to set." multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setDebounceMode">
                    <desc>Set debounce mode of selected input interface.</desc>
                    <param desc="Input debounce mode to set." multiplicity="1" name="mode" ref="CSK_DigitalIOManager.DebounceMode" type="enum"/>
                </function>
                <function name="setDebounceValue">
                    <desc>Set debounce value of selected input interface in milliseconds / ticks.</desc>
                    <param desc="Input debounce value to set." multiplicity="1" name="value" type="int"/>
                </function>
                <function name="setInputLogic">
                    <desc>Set signal logic of selected input interface.</desc>
                    <param desc="Input signal logic to set." multiplicity="1" name="logic" ref="CSK_DigitalIOManager.SignalLogic" type="enum"/>
                </function>
                <function name="setActiveStatusOutput">
                    <desc>Set if selected output interface should be active.</desc>
                    <param desc="Output active status to set." multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setActivationMode">
                    <desc>Set activation mode of selected output interface.</desc>
                    <param desc="Output activation mode to set." multiplicity="1" name="mode" ref="CSK_DigitalIOManager.ActivationMode" type="enum"/>
                </function>
                <function name="setActivationValue">
                    <desc>Set activation value of selected output interface in milliseconds / ticks.</desc>
                    <param desc="Output activation value to set." multiplicity="1" name="value" type="int"/>
                </function>
                <function name="setOutputLogic">
                    <desc>Set signal logic of selected output interface.</desc>
                    <param desc="Output signal logic to set." multiplicity="1" name="logic" ref="CSK_DigitalIOManager.SignalLogic" type="enum"/>
                </function>
                <function name="setOutputMode">
                    <desc>Set output mode of selected output interface.</desc>
                    <param desc="Output mode to set." multiplicity="1" name="mode" ref="CSK_DigitalIOManager.PortOutputMode" type="enum"/>
                </function>
                <function name="setInputForLink">
                    <desc>Preset input interface to use for new link (see "addLink").</desc>
                    <param desc="Input interface to set." multiplicity="1" name="port" type="string"/>
                </function>
                <function name="setOutputForLink">
                    <desc>Set output interface to forward as event (see "addForwardEvent").</desc>
                    <param desc="Output interface to set." multiplicity="1" name="port" type="string"/>
                </function>
                <function name="selectLink">
                    <desc>Select link (e.g. in UI table).</desc>
                    <param desc="Selected link" multiplicity="1" name="selection" type="string"/>
                </function>
                <function name="addLink">
                    <desc>Add link (via cFlow) from preset digital input signal to digital output signal.</desc>
                </function>
                <function name="removeLink">
                    <desc>Remove preselected link (from cFlow).</desc>
                </function>
                <function name="setDelayForLink">
                    <desc>Set optional delay for link in cFlow.</desc>
                    <param desc="Delay time in [ms] to set." multiplicity="1" name="value" type="int"/>
                </function>
                <function name="setInputToForward">
                    <desc>Set input interface to forward as event (see "addForwardEvent").</desc>
                    <param desc="Input interface to set." multiplicity="1" name="port" type="string"/>
                </function>
                <function name="setOutputToTrigger">
                    <desc>Preset output interface to set if registered triggerEvent (see "addTriggerEvent").</desc>
                    <param desc="Output interface to set." multiplicity="1" name="port" type="string"/>
                </function>
                <function name="setTriggerEvent">
                    <desc>Preset event name to listen to (see "addTriggerEvent").</desc>
                    <param desc="Trigger event name to set." multiplicity="1" name="event" type="string"/>
                </function>
                <function name="addForwardEvent">
                    <desc>Add event to forward an incoming digital input signal.</desc>
                </function>
                <function name="addTriggerEvent">
                    <desc>Add event to listen to and to trigger a digital output signal.</desc>
                </function>
                <function name="selectForwardInputToEventPair">
                    <desc>Select Input2Event-pair.</desc>
                    <param desc="'Input2Event'-pair to select (via UI selection or port identifier like 'S1DI1')." multiplicity="1" name="selection" type="string"/>
                </function>
                <function name="selectOutputToSetByEventPair">
                    <desc>Select Event2Trigger-pair.</desc>
                    <param desc="'Event2Trigger'-pair to select (via UI selection or port identifier like 'S1DO1')." multiplicity="1" name="selection" type="string"/>
                </function>
                <function name="removeTriggerEvent">
                    <desc>Remove event to trigger a digital output signal.</desc>
                    <param desc="Eventname" multiplicity="1" name="event" type="string"/>
                </function>
                <function name="removeForwardEvent">
                    <desc>Remove event to forward an incoming digital input signal.</desc>
                    <param desc="Eventname" multiplicity="1" name="event" type="string"/>
                </function>
                <function name="setOutput">
                    <desc>Set status of currently selected output port.</desc>
                    <param desc="Status to set." multiplicity="1" name="newState" type="bool"/>
                </function>
                <function name="getInputState">
                    <desc>Get current status of preselected input interface.</desc>
                    <return desc="Current status." multiplicity="?" name="state" type="bool"/>
                </function>
                <function name="setInputToForwardDataInfo">
                    <desc>Set data information text of selected input interface to forward "OnChange" status as event (see "addForwardEvent").</desc>
                    <param desc="DataInfo text to set." multiplicity="1" name="info" type="string"/>
                </function>
                <function name="getForwardEventList">
                    <desc>Return lists of configured forward events and related data information texts (see "addForwardEvent").</desc>
                    <return desc="List of configured events." multiplicity="*" name="eventList" type="string"/>
                    <return desc="List of configured DataInfo texts." multiplicity="*" name="infoTexts" type="string"/>
                </function>
                <function name="freeSensorPort">
                    <desc>Function to free a blocked sensor port to be available again for this module.</desc>
                    <param desc="Port" multiplicity="1" name="port" type="string"/>
                    <return desc="Success" multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="blockSensorPort">
                    <desc>Function to block a sensor port so that it can be used by other applications.</desc>
                    <param desc="Port" multiplicity="1" name="port" type="string"/>
                    <return desc="Success" multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="setInputTracking">
                    <desc>Function to set if digital input signals should be tracked to show their states in UI. +
INFO: Recommended to leave it switched off, if not essentially required!</desc>
                    <param desc="Status to set." multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="setFlowConfigPriority">
                    <desc>Function to configure if FlowConfig should have priority for FlowConfig relevant configuration.</desc>
                    <param desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="clearFlowConfigRelevantConfiguration">
                    <desc>Function to clear FlowConfig relevant configurations.</desc>
                </function>
                <function name="removeForwardEventViaUI">
                    <desc>Remove preselected event to not forward incoming digital input signals anymore.</desc>
                </function>
                <function name="removeTriggerEventViaUI">
                    <desc>Remove preselected event to not trigger digital output anymore.</desc>
                </function>
                <function name="getStatusModuleActive">
                    <desc>Function to get status if module is active.</desc>
                    <return desc="Status" multiplicity="1" name="status" type="bool"/>
                </function>
                <function name="loadParameters">
                    <desc>Load parameters for this module from the CSK_PersistentData module if possible and use them.</desc>
                    <return desc="Success to load parameters." multiplicity="1" name="success" type="bool"/>
                </function>
                <function name="getParameters">
                    <trait>released</trait>
                    <desc>Function to get all parameters of the client in JSON format.</desc>
                    <return desc="JSON string with all parameters." multiplicity="1" name="jsonParameters" type="string"/>
                </function>
                <function name="resetModule">
                    <desc>Function to reset main configuration of module.</desc>
                </function>
            </serves>
        </crown>
        <crown name="DigitalIOManager_FC">
            <trait>released</trait>
            <desc>Crown to provide CSK_FlowConfig relevant features.</desc>
            <enum name="DigitalOutPorts" trait="released">
                <desc>Placeholder for dynamic created output list.</desc>
            </enum>
            <enum name="DigitalInPorts" trait="released">
                <desc>Placeholder for dynamic created input list.</desc>
            </enum>
            <serves/>
            <crown name="OnNewInputState">
                <trait>released</trait>
                <desc>Provide digital input states.</desc>
                <serves>
                    <event name="OnNewInputState">
                        <include>data-flow</include>
                        <desc>Provide digital input states.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="'CSK_DigitalIOManager.OnNewInputState[PORT]'&#10;&#10;Parameter:&#10;1: State of the input signal (BOOL)" multiplicity="1" name="OnNewInputState" type="string"/>
                    </event>
                    <function name="create">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Port to use." multiplicity="1" name="DigitalInPorts" ref="DigitalIOManager_FC.DigitalInPorts" type="enum"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="register">
                        <trait>released</trait>
                        <desc>Internally used CSK_FlowConfig register function.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Internal parameter (not used)." multiplicity="1" name="eventname" type="string"/>
                        <param desc="Internally used callback function." multiplicity="1" name="callback" type="string"/>
                        <return desc="Success of register process." multiplicity="1" name="success" type="bool"/>
                    </function>
                </serves>
            </crown>
            <crown name="Set">
                <desc>Set source to set state of digital output.</desc>
                <serves>
                    <function name="create">
                        <desc>Internally used CSK_FlowConfig create function.</desc>
                        <param desc="Port to use." multiplicity="1" name="DigitalOutPorts" ref="DigitalIOManager_FC.DigitalOutPorts" type="enum"/>
                        <return desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                    </function>
                    <function name="set">
                        <include>data-flow</include>
                        <desc>Set source to set state of digital output.</desc>
                        <param desc="Handle to internally used FlowConfig instance." multiplicity="1" name="handle" type="handle"/>
                        <param desc="Source to set state (BOOL)." multiplicity="1" name="source" type="string"/>
                    </function>
                </serves>
            </crown>
        </crown>
        <meta key="author">SICK AG</meta>
        <meta key="version">4.0.0</meta>
        <meta key="priority">low</meta>
        <meta key="copy-protected">false</meta>
        <meta key="read-protected">false</meta>
        <meta key="crown2-flow-engine">false</meta>
        <meta key="LuaLoadAllEngineAPI">false</meta>
        <entry default="CSK_Module_DigitalIOManager.lua" path="scripts"/>
    </application>
</manifest>
